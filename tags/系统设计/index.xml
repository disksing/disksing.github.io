<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>系统设计 on 硬盘在歌唱</title><link>http://disksing.com/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</link><description>Recent content in 系统设计 on 硬盘在歌唱</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 17 Nov 2014 00:00:00 +0000</lastBuildDate><atom:link href="http://disksing.com/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/index.xml" rel="self" type="application/rss+xml"/><item><title>Go 语言设计模式：组合</title><link>http://disksing.com/go-composite/</link><pubDate>Mon, 17 Nov 2014 00:00:00 +0000</pubDate><guid>http://disksing.com/go-composite/</guid><description>GoF 对组合模式的定义是，将对象组合成树形结构以表示“部分整体”的层次结构，组合模式使得用户对单个对象和组合对象的使用具有一致性。
对于这句话我是有异议的，这里先卖个关子，我们先从实际例子说起。
组合模式的例子大家都见得很多了，比如文件系统（文件/文件夹）、GUI 窗口（Frame/Control）、菜单（菜单/菜单项）等等，我这里也举个菜单的例子，不过不是操作系统里的菜单，是真正的菜单，KFC 的……
姑且把 KFC 里的食物认为是菜单项，一份套餐是菜单。菜单和菜单项有一些公有属性：名字、描述、价格、都能被购买等，所以正如 GoF 所说，我们需要一致性地使用它们。它们的层次结构体现在一个菜单里会包含多个菜单项或菜单，其价格是所有子项的和。嗯，这个例子其实不是很恰当，不能很好的体现菜单包含菜单的情况，所以我多定义了一个“超值午餐”菜单，其中包含若干个套餐。
用代码归纳总结一下，最终我们的调用代码是这样的：
1func main() { 2 menu1 := NewMenu(&amp;#34;培根鸡腿燕麦堡套餐&amp;#34;, &amp;#34;供应时间：09:15--22:44&amp;#34;) 3 menu1.Add(NewMenuItem(&amp;#34;主食&amp;#34;, &amp;#34;培根鸡腿燕麦堡1个&amp;#34;, 11.5)) 4 menu1.Add(NewMenuItem(&amp;#34;小吃&amp;#34;, &amp;#34;玉米沙拉1份&amp;#34;, 5.0)) 5 menu1.Add(NewMenuItem(&amp;#34;饮料&amp;#34;, &amp;#34;九珍果汁饮料1杯&amp;#34;, 6.5)) 6 7 menu2 := NewMenu(&amp;#34;奥尔良烤鸡腿饭套餐&amp;#34;, &amp;#34;供应时间：09:15--22:44&amp;#34;) 8 menu2.Add(NewMenuItem(&amp;#34;主食&amp;#34;, &amp;#34;新奥尔良烤鸡腿饭1份&amp;#34;, 15.0)) 9 menu2.Add(NewMenuItem(&amp;#34;小吃&amp;#34;, &amp;#34;新奥尔良烤翅2块&amp;#34;, 11.0)) 10 menu2.Add(NewMenuItem(&amp;#34;饮料&amp;#34;, &amp;#34;芙蓉荟蔬汤1份&amp;#34;, 4.5)) 11 12 all := NewMenu(&amp;#34;超值午餐&amp;#34;, &amp;#34;周一至周五有售&amp;#34;) 13 all.Add(menu1) 14 all.Add(menu2) 15 16 all.Print() 17} 得到的输出如下：
超值午餐, 周一至周五有售, ￥53.50 ------------------------ 培根鸡腿燕麦堡套餐, 供应时间：09:15--22:44, ￥23.</description></item></channel></rss>